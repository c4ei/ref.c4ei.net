<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="AAH - All About Healthy Network" />
    <meta name="author" content="c4ei.net">
    <link rel="apple-touch-icon" href="/favicon.ico" />
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
    <title>AAH MINING</title>
    <style>
        #MiningQty {
            font-size: 48px;
            transition: color 0.2s ease-in-out;
        }
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
        }

        .container {
            background-color: #fff;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            text-align: center;
        }

        h1 {
            color: #333;
        }

        .user-info {
            margin-top: 20px;
        }

        button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        button:hover {
            background-color: #0056b3;
        }
        #clock {
            font-size: 48px;
            color: #333;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>AAH MINING</h1>
        <!-- <img src="/public/AAH265.png" border="0" width="256" height="256" /> <br/> -->
        <img src="https://i.ibb.co/tPLztBf/AAH265.png" alt="AAH265" border="0" width="128" height="128" >
        <!-- <p>이 페이지는 AAH WEB MINING 을 표시하는 페이지입니다.</p> -->
        <div class="user-info">
            <p>적립예정 AAH 수량 : <span id="accumulatedCount"><%=aah_balance%></span></p>
            <p>내 추천인 수 : <%=reffer_cnt%> <font color="red">Hash+</font></p>
            <p>내 파티원 수 : <%=party_mem_cnt%> <font color="red">Hash+</font></p>
        </div>
        <button id="showMoreButton" onclick="jsfn_lyShow()">추가정보</button>
        <div id="lyNoShow" style="display: none;">
            <p>내 Email 주소 : <%=email%></p>
            <p>내 AAH 주소 : <br /> <span id="aah_address"><%=aah_address%></span></p>
            <p>내 지갑 AAH 예치수량 : <span id="aah_real_balance"><%=aah_real_balance%></span> <font color="red">Hash+</font></p>
<pre>
AAH 예치수량 1000 초과 Hash파워 증가 250
AAH 예치수량 500  초과 Hash파워 증가 150
AAH 예치수량 200  초과 Hash파워 증가  50
AAH 예치수량 100  초과 Hash파워 증가  20
AAH 예치수량 50   초과 Hash파워 증가   5
AAH 예치수량 10   초과 Hash파워 증가   2
AAH 예치수량 0    초과 Hash파워 증가   1
</pre>
        </div>
        
        <h1 id="MiningQty">0.0000000000001</h1> 
        <button id="startButton">채굴시작</button>
        <button id="accumulateButton">적립</button>
        <button id="makeLinkButton">초대링크생성</button>
        <button id="makePartyButton">파티</button>
        <input type="hidden" id="email" value="<%=email%>" />
        <input type="hidden" id="userIdx" value="<%=userIdx%>" />
        <br />※적립버튼은 2시간마다 클릭 가능합니다.
        <div id="clock">2:00:00</div>
        <script>
        function startCountdown() {
            let _remainTime = "<%=ing_sec%>" ;
            var time = 7200; // 2 hours in seconds
            if(_remainTime>7200){
                time = 0;
            }else{
                time = time - _remainTime;
            }
            var clock = document.getElementById('clock');

            var countdown = setInterval(function() {
            var hours = Math.floor(time / 3600);
            var minutes = Math.floor((time % 3600) / 60);
            var seconds = time % 60;

            // Add leading zeros if necessary
            hours = (hours < 10) ? "0" + hours : hours;
            minutes = (minutes < 10) ? "0" + minutes : minutes;
            seconds = (seconds < 10) ? "0" + seconds : seconds;

            // Display the countdown
            clock.textContent = hours + ":" + minutes + ":" + seconds;

            // Check if the countdown is finished
            if (time <= 0) {
                clearInterval(countdown);
                clock.textContent = "00:00:00";
            } else {
                time--;
            }
            }, 1000); // Update every second
        }

        startCountdown();
        </script>
    </div>
    <script>
        function jsfn_lyShow(){
            let lyNoShow = document.getElementById("lyNoShow");
            if(lyNoShow.style.display=="none"){
                lyNoShow.style.display="block";
            }else{
                lyNoShow.style.display="none";
            }
        }
        const MiningQtyDisplay = document.getElementById('MiningQty');
        const startButton = document.getElementById('startButton');
        const accumulateButton = document.getElementById('accumulateButton');
        const makeLinkButton = document.getElementById('makeLinkButton');
        const makePartyButton = document.getElementById('makePartyButton');
        let _serverSpendTime = "<%=ing_sec%>" ; // 
        let _serverPlusTime = _serverSpendTime * 0.0000000001;  // 0.0000000001
        let MiningQty = _serverPlusTime;
        // alert(_serverPlusTime+":_serverPlusTime/n"+"<%=ing_sec%>");
        let intervalId;

        const updateCount = () => {
            let minusInt = "<%=reffer_cnt%>";
            let aah_real_balance = "<%=aah_real_balance%>";
            if (aah_real_balance>1000){ minusInt = minusInt + 250; }
            else if (aah_real_balance>500){ minusInt = minusInt + 150; }
            else if (aah_real_balance>200){ minusInt = minusInt + 50; }
            else if (aah_real_balance>100){ minusInt = minusInt + 20; }
            else if (aah_real_balance>50){ minusInt = minusInt + 5; }
            else if (aah_real_balance>10){ minusInt = minusInt + 2; }
            else if (aah_real_balance>0){ minusInt = minusInt + 1; }
            let _party_mem_cnt = "<%=party_mem_cnt%>";
            minusInt = minusInt + parseInt(_party_mem_cnt);
            
            if(minusInt>500){ minusInt = 500; } // max 500 invate member 
            const randomInterval = 1100 - parseInt(minusInt); // 1초마다
            setTimeout(() => {
                MiningQty += 0.0000000001; // 0.0000000001 씩 증가
                const integerPart = Math.floor(MiningQty); // 정수 부분
                let decimalPart = (MiningQty - integerPart).toFixed(10).slice(2); // 소수 부분
                let randomDigits = Math.floor(Math.random() * 1000).toString().padStart(3, '0'); // 랜덤한 3자리 생성
                const displayCount = integerPart + "." + decimalPart + randomDigits; // 정수부분과 소수부분 그리고 랜덤한 숫자 합치기
                MiningQtyDisplay.textContent = displayCount;
                MiningQtyDisplay.style.color = 'red';
                setTimeout(() => { MiningQtyDisplay.style.color = 'black'; }, 200);
            }, randomInterval);
        };

        makeLinkButton.addEventListener('click', () => {
            document.location.href='/invite';
        });
        
        makePartyButton.addEventListener('click', () => {
            // document.location.href='/makeParty';
            document.location.href='/parties';
        });

        startButton.addEventListener('click', () => {
            if (!intervalId) {
                updateCount();
                intervalId = setInterval(updateCount, 1000);
            }
            startButton.disabled=true;
            startButton.style.backgroundColor = "#c5cacf";
            // alert('click');
        });

        accumulateButton.addEventListener('click', () => {
            // alert(MiningQtyDisplay.textContent+" : MiningQtyDisplay");
            let _miningQty = MiningQtyDisplay.textContent;
            let _email = document.getElementById("email").value;
            let _userIdx = document.getElementById("userIdx").value;
            clearInterval(intervalId);
            MiningQty = 0;
            MiningQtyDisplay.textContent = "0.0000000000001";
            MiningQtyDisplay.style.color = 'black';
            intervalId = null;

            // 적립 버튼을 누를 때 서버로 데이터를 전송
            fetch('/accumulate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ MiningQty: _miningQty , email:_email, userIdx:_userIdx })
            })
            .then(response => {
                if (response.ok) {
                    alert( _miningQty + ' 적립이 완료되었습니다.');
                    document.location.href='/';
                } else {
                    alert('적립에 실패했습니다.');
                }
            })
            .catch(error => {
                alert('네트워크 오류:', error);
            });
            startButton.disabled=false;
            startButton.style.backgroundColor = "#007bff";
        });
        startButton.click();
        if(_serverSpendTime>7200){
            accumulateButton.disabled = false;
            accumulateButton.style.backgroundColor = "#007bff";
        }else{
            accumulateButton.disabled = true;
            accumulateButton.style.backgroundColor = "#c5cacf";
        }
    </script>
    
</body>
</html>
